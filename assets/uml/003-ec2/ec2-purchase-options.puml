@startuml

usecase purchase_options #orange;line:white;line.dotted;text:black [
  <font:impact><size:34>     EC2 Purchase</size></font>
  <i><size:28><b>     Options</b></size></i>

  ----
  <b><i><size:14>        EC2 Saving plans - Flexible across:
                                • Instance Size (e.g., m5.xlarge, m5.2xlarge)
  • OS (e.g., Linux, Windows)
                  • Tenancy (Host, Dedicated, Default)
                   • Locked to a specific instance family
& AWS region

  ----
  <b><size:18>       EC2 Saving plans:
        .- discount for long-term usage
      (up to 72% - same as RIs)
               .- Commit to a certain type of usage
          ($10/hour for 1 or 3 years)
             .- Usage beyond EC2 Savings Plans
                  is billed at the On-Demand price
\n
]

usecase dedicated_host #skyblue;line:blue;line.dotted;text:black [
 <font:impact><size:24>Dedicated</size></font>
 <font:impact><size:24>host</size></font>
----
.- Book an entire physical server
.- Gives control over instance placement
.- Full visibility of sockets, cores
.- No RDS, No Placement Group, No AutoScaling
====
<i><color:blue>• On-demand (hourly) for active</color></i>
<i><color:blue>• 1,3 years</color></i>
<i><color:blue>(No Upfront, Partial Upfront,All Upfront)</color></i>
====
<b><color:darkred>Most expensive</color></b>
....
.- software with complicated licensing
model (per socket, per core)
.- strong regulatory or
compliance needs
]

usecase dedicated_instance #yellow;line:brown;line.dotted;text:black [
 <font:impact><size:24>Dedicated</size></font>
 <font:impact><size:24>instance</size></font>
----
.- Hardware dedicated to you
        .- May share hardware with other
instances in same account.
                .- No control over instance placement
     .- NO visibility of sockets, cores
   .- Only standard EBS volumes.
====
<i><color:blue>• On-demand (hourly) or per region fee</color></i>
====
<b><color:darkred>Most expensive</color></b>
....
.- strong regulatory or
compliance needs
]

usecase ec2_ondemand #pink;line:brown;line.dotted;text:black [
 <font:impact><size:24>On Demand</size></font>
 <font:impact><size:24>instance</size></font>
----
Normal features of EC2.
No long-term commitment
====
<i><color:blue>Pay per use:
<i><color:blue>                   • Linux or Windows - billing per second,
<i><color:blue>after the first minute
<i><color:blue>• All other operating systems
<i><color:blue>billing per hour
====
<b><color:darkred>highest cost - no upfront payment
....
short-term and Un-Interrupted workload
can't predict the application behaviour
]


usecase ec2_capacity_reservation #darkred;line:white;line.dotted;text:white [
 <font:impact><size:24>Capacity</size></font>
 <font:impact><size:24>reservation</size></font>
----
Normal features of EC2.
No time commitment (create/cancel anytime),
====
<i><color:pink>                    • Reserve On-Demand instances capacity
 <i><color:pink>in a specific AZ for any duration
<i><color:pink>                          • Always access to EC2 capacity when need it
<i><color:pink>                         • Combine with Regional Reserved Instances
<i><color:pink>                              & Savings Plans to benefit from billing discounts
<i><color:pink>• charged at On-Demand rate
 <i><color:pink>                 no matter if you run or not the instance
====
<b><color:pink>no billing discounts
....
for short-term, uninterrupted workloads
in specific AZ
]



usecase ec2_spot_instance #darkgreen;line:white;line.dotted;text:white [
 <font:impact><size:24>Spot</size></font>
 <font:impact><size:24>instance</size></font>
----
            • Normal features of EC2.
                 • No long-term commitment
• “lose” at any time
                             IF (max price) < (current spot price)

====
<i><color:lightgreen>        • discount up to 90% compare to On-demand
<i><color:lightgreen>• Linux or Windows - billing per second,
<i><color:lightgreen>after the first minute
<i><color:lightgreen>• All other operating systems
<i><color:lightgreen>billing per hour
====
<b><color:orange>The MOST cost-efficient instances in AWS
....
• Not suitable for critical jobs or databases
• for workloads that are resilient to failure:
- Batch jobs
      - Data analysis
              - Image processing
                             - Any distributed workloads
                           - Workloads with a flexible
            start and end time
]




usecase ec2_reserved_instance #lightgreen;line:white;line.dotted;text:black [
 <font:impact><size:24>Reserved</size></font>
 <font:impact><size:24>instance</size></font>
----
Normal features of EC2.
Long-term commitment
====
<i><color:darkgreen>               • Up to 72% discount compared to On-demand
<i><color:darkgreen>• Reserve a specific instance attributes
<i><color:darkgreen>(Type, Region,Tenancy, OS)
<i><color:darkgreen> • Up to 66% discount when convertible:
<i><color:darkgreen> change Type, OS, Scope, Tenancy
<i><color:darkgreen>       • Reserv. Period – 1 y(+dto) | 3 y (+++dto)
<i><color:darkgreen>• Scope – Regional or Zonal
====
<b><color:darkred>Pay Options: No Upfrnt+, Partial Upfrnt++, All Upfrnt+++
<b><color:darkred>buy & sell in the Reserved Instance Market
....
for steady-state usage applications (database)

]




purchase_options ..r.. ec2_ondemand
purchase_options .u. dedicated_instance
purchase_options .u. dedicated_host
purchase_options .d. ec2_capacity_reservation
purchase_options .d. ec2_spot_instance
purchase_options .l. ec2_reserved_instance
@enduml